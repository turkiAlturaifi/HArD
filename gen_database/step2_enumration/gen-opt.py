import os
import pandas as pd
from rdkit import Chem
from rdkit.Chem import AllChem
from concurrent.futures import ThreadPoolExecutor
import subprocess
import shutil
### Section 1 ###
def smiles_to_xyz(smiles, file_name):
    mol = Chem.MolFromSmiles(smiles)
    if mol is None:
        print(f"Failed to create molecule from SMILES: {smiles}")
        return
    mol = Chem.AddHs(mol)
    AllChem.EmbedMolecule(mol, AllChem.ETKDG())
    num_atoms = mol.GetNumAtoms()
    with open(os.path.join('xyz', file_name), 'w') as f:
        f.write(f"{num_atoms}\n")
        f.write("XYZ coordinates generated by RDKit\n")
        conf = mol.GetConformer()
        for atom in mol.GetAtoms():
            pos = conf.GetAtomPosition(atom.GetIdx())
            f.write(f"{atom.GetSymbol()} {pos.x} {pos.y} {pos.z}\n")

if not os.path.exists('xyz'):
    os.makedirs('xyz')

df = pd.read_csv('final.csv')
for index, row in df.iterrows():
    file_name = f"{row['ID']}.xyz"
    smiles = row['SMILES']
    smiles_to_xyz(smiles, file_name)

### Section 2 ###
def process_file(filename):
    with open(os.path.join('xyz', filename), 'r') as file:  # Change to read from 'xyz' directory
        lines = file.readlines()[2:]  # Skip first two lines
    header = [
        "%mem=32GB\n",
        "%nprocshared=16\n",
        "# opt freq B3LYP/6-31+G(d) empiricaldispersion=gd3bj\n",
        "\n", 
        "pitt\n",
        "\n", 
        "0 1\n"
    ]
    # combine header, xyz coords and two empty lines
    content = header + lines + ["\n", "\n"] 
    new_filename = os.path.join('com', filename.replace('.xyz', '.com')) 
    with open(new_filename, 'w') as file:
        file.writelines(content)
def main():
    os.makedirs('com', exist_ok=True)
    xyz_files = [f for f in os.listdir('xyz') if f.endswith('.xyz')] 
    with ThreadPoolExecutor() as executor:
        executor.map(process_file, xyz_files)

if __name__ == '__main__':
    main()

# change the charge of the files that end with _c to -1
com_directory = 'com'
command1 = f"sed -i '' 's/0 1/-1  1/g' {com_directory}/*.com"
subprocess.run(command1, shell=True)

total_smiles = len(df)
total_xyz = len(os.listdir('xyz'))
total_com = len(os.listdir('com'))
print(f"Total SMILES (read): {total_smiles}")
print(f"Total generated XYZ files: {total_xyz}")
print(f"Total generated COM files: {total_com}")


def move_files_based_on_prefix():
    files = [f for f in os.listdir('com') if f.endswith('.com')]
    for file in files:
        prefix = file.split('_')[0]
        prefix_directory = os.path.join('com', prefix)
        if not os.path.exists(prefix_directory):
            os.makedirs(prefix_directory)
        shutil.move(os.path.join('com', file), os.path.join(prefix_directory, file))
    print("Files in the 'com' directory have been organized into directories based on their prefix.")

def remove_xyz_directory():
    if os.path.exists('xyz'):
        shutil.rmtree('xyz')

if __name__ == "__main__":
    move_files_based_on_prefix()
    # remove_xyz_directory()







